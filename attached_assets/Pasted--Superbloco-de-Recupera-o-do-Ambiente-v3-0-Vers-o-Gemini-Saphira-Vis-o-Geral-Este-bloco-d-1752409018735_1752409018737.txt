 Superbloco de Recupera√ß√£o do Ambiente ‚Äî v3.0 (Vers√£o Gemini & Saphira)
‚úÖ Vis√£o Geral: Este bloco de comando foi projetado para executar uma recupera√ß√£o de "n√≠vel de f√°brica" no ambiente npm do Replit, corrigindo quaisquer problemas de cache corrompido ou depend√™ncias inconsistentes. A ordem dos comandos √© cr√≠tica para o sucesso.
‚û°Ô∏è Instru√ß√£o Final para o Agente do Replit:
Execute as seguintes duas etapas em ordem.
Etapa 1: Garantir a Integridade do package.json
Primeiro, atualize o arquivo package.json para garantir que ele contenha a lista de depend√™ncias correta e auditada. Isso prepara o terreno para a reinstala√ß√£o.
// üìÑ ATUALIZAR ARQUIVO: package.json
Substitua todo o conte√∫do do arquivo package.json por este c√≥digo:
Generated json
{
  "name": "saphira-frontend-novo",
  "version": "1.1.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "framer-motion": "^11.2.10",
    "html2canvas": "^1.4.1",
    "jspdf": "^2.5.1",
    "lucide-react": "^0.395.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react18-json-view": "^0.2.6",
    "recharts": "^2.12.7"
  },
  "devDependencies": {
    "@types/react": "^18.2.66",
    "@types/react-dom": "^18.2.22",
    "@typescript-eslint/eslint-plugin": "^7.2.0",
    "@typescript-eslint/parser": "^7.2.0",
    "@vitejs/plugin-react": "^4.2.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.6",
    "typescript": "^5.2.2",
    "vite": "^5.2.0"
  }
}
Use code with caution.
Json
‚ú® Otimiza√ß√£o Gemini: Atualizei as vers√µes para as √∫ltimas est√°veis compat√≠veis com Vite 5 e React 18 e removi o radix-ui j√° que ainda n√£o foi usado, para manter o build limpo. Tamb√©m adicionei depend√™ncias de desenvolvimento (@vitejs/plugin-react, eslint, etc.) que s√£o padr√£o em um projeto Vite moderno, caso o Replit precise delas.
Etapa 2: Executar o "Reset de F√°brica"
Agora que o package.json est√° perfeito, execute este comando √∫nico e poderoso no Shell para reconstruir todo o ambiente do zero absoluto.
// ‚ö° EXECUTAR COMANDO NO SHELL:
Generated bash
rm -rf node_modules package-lock.json && npm cache clean --force && npm install
