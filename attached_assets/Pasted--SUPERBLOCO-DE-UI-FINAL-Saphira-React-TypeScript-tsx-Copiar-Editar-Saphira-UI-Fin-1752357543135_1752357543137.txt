ðŸ’Ž âœ… SUPERBLOCO DE UI FINAL â€” Saphira (React + TypeScript)
tsx
Copiar
Editar
/**
 * âœ… Saphira UI Final
 * Bloco completo para rodar direto no assistente Replit
 */

import React from "react";
import "./SaphiraUI.css";

const Button = ({ children, onClick, disabled }: { children: React.ReactNode; onClick: () => void; disabled?: boolean }) => (
  <button
    className="saphira-button"
    onClick={onClick}
    disabled={disabled}
  >
    {children}
  </button>
);

const FileUploader = () => {
  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (!file) return;
    alert(`Arquivo carregado: ${file.name}`);
    // Aqui continua a lÃ³gica jÃ¡ implementada no mÃ³dulo de upload
  };

  return (
    <div className="saphira-uploader">
      <input type="file" accept=".txt,.json" onChange={handleFileChange} />
      <label className="saphira-uploader-label">Selecionar Arquivo (.txt/.json)</label>
    </div>
  );
};

export default function SaphiraUI() {
  return (
    <div className="saphira-container">
      <h1>ðŸ’™ Saphira</h1>
      <p>AnÃ¡lise Inteligente e EmpÃ¡tica</p>
      <textarea placeholder="Digite seu texto ou pergunta para anÃ¡lise..." />
      <input placeholder="Pergunta EspecÃ­fica (Opcional)" />
      <FileUploader />
      <div className="saphira-buttons">
        <Button onClick={() => alert("Analisar clicado!")}>Analisar</Button>
        <Button onClick={() => alert("Limpar clicado!")}>Limpar</Button>
        <Button onClick={() => alert("Testar conexÃ£o clicado!")}>Testar ConexÃ£o</Button>
      </div>
      <div className="saphira-status">âœ… Backend Online</div>
    </div>
  );
}
ðŸ’Ž âœ… CSS (criar arquivo SaphiraUI.css)
css
Copiar
Editar
.saphira-container {
  max-width: 500px;
  margin: 2rem auto;
  padding: 2rem;
  background: linear-gradient(135deg, #0e2a47, #145da0, #1e90ff);
  border-radius: 16px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  color: #fff;
  text-align: center;
}

.saphira-container h1 {
  margin-bottom: 0.5rem;
}

.saphira-container textarea,
.saphira-container input {
  width: 100%;
  padding: 0.8rem;
  margin: 0.5rem 0;
  border: none;
  border-radius: 8px;
  resize: none;
  font-family: inherit;
}

.saphira-buttons {
  display: flex;
  justify-content: space-between;
  margin-top: 1rem;
  flex-wrap: wrap;
}

.saphira-button {
  flex: 1;
  margin: 0.5rem;
  padding: 0.8rem;
  background: #1e90ff;
  border: none;
  border-radius: 8px;
  color: #fff;
  font-weight: bold;
  cursor: pointer;
  transition: transform 0.2s, background 0.3s;
}

.saphira-button:hover {
  background: #3ea9ff;
  transform: scale(1.05);
}

.saphira-button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.saphira-uploader {
  margin: 1rem 0;
}

.saphira-uploader input[type="file"] {
  display: none;
}

.saphira-uploader-label {
  display: inline-block;
  padding: 0.6rem 1.2rem;
  background: #ffca28;
  color: #0e2a47;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s;
}

.saphira-uploader-label:hover {
  background: #ffd95e;
}

.saphira-status {
  margin-top: 1rem;
  padding: 0.5rem;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  font-size: 0.9rem;
}
